// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.6
// source: TCP/TCP.proto

package TCP

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClientHandshake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ClientHandshake) Reset() {
	*x = ClientHandshake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TCP_TCP_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientHandshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientHandshake) ProtoMessage() {}

func (x *ClientHandshake) ProtoReflect() protoreflect.Message {
	mi := &file_TCP_TCP_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientHandshake.ProtoReflect.Descriptor instead.
func (*ClientHandshake) Descriptor() ([]byte, []int) {
	return file_TCP_TCP_proto_rawDescGZIP(), []int{0}
}

func (x *ClientHandshake) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ServerHandshake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply string `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *ServerHandshake) Reset() {
	*x = ServerHandshake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TCP_TCP_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerHandshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerHandshake) ProtoMessage() {}

func (x *ServerHandshake) ProtoReflect() protoreflect.Message {
	mi := &file_TCP_TCP_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerHandshake.ProtoReflect.Descriptor instead.
func (*ServerHandshake) Descriptor() ([]byte, []int) {
	return file_TCP_TCP_proto_rawDescGZIP(), []int{1}
}

func (x *ServerHandshake) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

type ClientData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientData) Reset() {
	*x = ClientData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_TCP_TCP_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientData) ProtoMessage() {}

func (x *ClientData) ProtoReflect() protoreflect.Message {
	mi := &file_TCP_TCP_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientData.ProtoReflect.Descriptor instead.
func (*ClientData) Descriptor() ([]byte, []int) {
	return file_TCP_TCP_proto_rawDescGZIP(), []int{2}
}

var File_TCP_TCP_proto protoreflect.FileDescriptor

var file_TCP_TCP_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x54, 0x43, 0x50, 0x2f, 0x54, 0x43, 0x50, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x54, 0x43, 0x50, 0x22, 0x2b, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x61,
	0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x27, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0c, 0x0a, 0x0a, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x32, 0x82, 0x01, 0x0a, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x0d, 0x73, 0x65, 0x6e,
	0x64, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x2e, 0x54, 0x43, 0x50,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x1a, 0x14, 0x2e, 0x54, 0x43, 0x50, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x61, 0x6e,
	0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x2e, 0x54, 0x43, 0x50, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x14, 0x2e, 0x54, 0x43, 0x50, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x22, 0x00, 0x42, 0x39, 0x5a,
	0x37, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x4f, 0x6c, 0x69, 0x46, 0x72, 0x79, 0x73, 0x65, 0x72, 0x2f, 0x44, 0x49,
	0x53, 0x59, 0x53, 0x5f, 0x4d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x61, 0x6e,
	0x64, 0x49, 0x6e, 0x32, 0x3b, 0x54, 0x43, 0x50, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_TCP_TCP_proto_rawDescOnce sync.Once
	file_TCP_TCP_proto_rawDescData = file_TCP_TCP_proto_rawDesc
)

func file_TCP_TCP_proto_rawDescGZIP() []byte {
	file_TCP_TCP_proto_rawDescOnce.Do(func() {
		file_TCP_TCP_proto_rawDescData = protoimpl.X.CompressGZIP(file_TCP_TCP_proto_rawDescData)
	})
	return file_TCP_TCP_proto_rawDescData
}

var file_TCP_TCP_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_TCP_TCP_proto_goTypes = []interface{}{
	(*ClientHandshake)(nil), // 0: TCP.ClientHandshake
	(*ServerHandshake)(nil), // 1: TCP.ServerHandshake
	(*ClientData)(nil),      // 2: TCP.ClientData
}
var file_TCP_TCP_proto_depIdxs = []int32{
	0, // 0: TCP.transmitData.sendHandshake:input_type -> TCP.ClientHandshake
	2, // 1: TCP.transmitData.sendData:input_type -> TCP.ClientData
	1, // 2: TCP.transmitData.sendHandshake:output_type -> TCP.ServerHandshake
	1, // 3: TCP.transmitData.sendData:output_type -> TCP.ServerHandshake
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_TCP_TCP_proto_init() }
func file_TCP_TCP_proto_init() {
	if File_TCP_TCP_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_TCP_TCP_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientHandshake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TCP_TCP_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerHandshake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_TCP_TCP_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_TCP_TCP_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_TCP_TCP_proto_goTypes,
		DependencyIndexes: file_TCP_TCP_proto_depIdxs,
		MessageInfos:      file_TCP_TCP_proto_msgTypes,
	}.Build()
	File_TCP_TCP_proto = out.File
	file_TCP_TCP_proto_rawDesc = nil
	file_TCP_TCP_proto_goTypes = nil
	file_TCP_TCP_proto_depIdxs = nil
}
